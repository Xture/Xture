_templates:
  local_env: &local_env
    APP_CONFIG: /config/dev.py
    PROJECT_CONFIG: /config/prom.py
    CELERY_CONFIG_MODULE: celeryconfig.local
    PYTHONPATH: /config
  node_env: &node_env
    NODE_PATH: /usr/local/lib/node_modules
  local_volumes: &local_volumes
    /config: !BindRO /work/config

containers:
  mongodb:
    setup:
      - !Ubuntu xenial
      - !AptTrust keys: [EA312927]
      - !UbuntuRepo
        url: http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2
        suite: multiverse
        components: []
      - !Install
        - mongodb-org=3.2.6
        - mongodb-org-server=3.2.6
        - mongodb-org-shell=3.2.6
        - mongodb-org-mongos=3.2.6
        - mongodb-org-tools=3.2.6
      - !EnsureDir /data/db
    environ:
      MONGO_ARGS: ""
    volumes:
      /data/db: !Persistent
        name: mongo-storage
        init-command: _init_db

  python:
    setup:
    - !Ubuntu xenial
    - !PipConfig { dependencies: true }
    - !Py3Requirements requirements.txt
    - !Py3Install [pip]  # In order to make pip freeze
    - !EnsureDir /config
    environ:
      LANG: en_US.utf8
    volumes: *local_volumes

  static:
    setup:
    - !Ubuntu xenial
    - !NpmDependencies
      file: package.json

  codestyle:
    setup:
    - !Alpine v3.4
    - !PipConfig
      dependencies: true
      python-exe: python3.5
    - !Py3Install [flake8]

commands:
  _init_db: !Command
    description: Init collection in mongo
    container: mongodb
    run: |
        mongod ${MONGO_ARGS} --fork --syslog
        bash /work/populate.sh
        mongod --shutdown

  run: !Supervise
    description: Run this application
    mode: stop-on-failure
    children:
      mongo: !Command
        description: Run mongodb server
        container: mongodb
        run: mongod ${MONGO_ARGS}

      python: !Command
        container: python
        environ: *local_env
        run: python3 /work/manage.py runserver --host=0.0.0.0 --port=5000

  webpack: !Command
    description: Build static
    container: static
    environ:
      <<: *node_env
      NODE_ENV: production
    run: [webpack]

  codestyle: !Command
    description: Run codestyle check
    container: codestyle
    run:
    - flake8
    - --exclude=./.vagga


